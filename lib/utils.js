// Generated by CoffeeScript 1.9.2
(function() {
  var Promise, _, s, utils;

  _ = require('underscore');

  s = require('underscore.string');

  Promise = require('pantheon-helpers').promise;

  utils = require('pantheon-helpers').utils;

  utils.getOrgDbs = function() {

    /*
    return promise only
    return all organization databases
     */
    var couchUtils;
    couchUtils = require('./couch_utils');
    return couchUtils.nano_system_user.db.list('promise').then(function(dbs) {
      var out;
      out = _.filter(dbs, function(x) {
        return x.indexOf('org_') === 0;
      });
      return Promise.resolve(out);
    });
  };

  utils.getPluginImportStrings = function() {

    /*
    return the import string for all plugins
    gets plugin names from conf.resources keys.
    import string can be explicitly defined via config.resource.RESOURCE_NAME.REQUIRE_NAME string
    or it can be autogenerated config.resource.RESOURCE_NAME.
     */
    var conf, pluginNames;
    conf = require('./config');
    pluginNames = _.map(conf.RESOURCES, function(plugin, pluginName) {
      if (plugin.REQUIRE_NAME != null) {
        return plugin.REQUIRE_NAME;
      } else {
        return 'kratos-' + pluginName.toLowerCase();
      }
    });
    return pluginNames;
  };

  utils.getPlugins = function() {
    var pluginNames, plugins;
    pluginNames = utils.getPluginImportStrings();
    return plugins = pluginNames.map(function(pluginName) {
      return require(pluginName);
    });
  };

  module.exports = utils;

}).call(this);
