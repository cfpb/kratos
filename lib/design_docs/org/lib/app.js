// Generated by CoffeeScript 1.9.2
(function() {
  var _, dd, helpers, shared;

  _ = require('underscore');

  shared = require('./shared');

  helpers = require('pantheon-helpers').design_docs.helpers(shared);

  dd = {
    views: {
      by_role: {
        map: function(doc) {
          var auth, ref, results, role_data, role_name, team_id, user_id;
          auth = require('views/lib/auth');
          if (!auth._is_team(doc)) {
            return;
          }
          team_id = doc._id.slice(5);
          ref = doc.roles;
          results = [];
          for (role_name in ref) {
            role_data = ref[role_name];
            results.push((function() {
              var i, len, ref1, results1;
              ref1 = role_data.members || [];
              results1 = [];
              for (i = 0, len = ref1.length; i < len; i++) {
                user_id = ref1[i];
                results1.push(emit([user_id, role_name, team_id]));
              }
              return results1;
            })());
          }
          return results;
        }
      }
    },
    lists: {
      get_teams: function(header, req) {
        return helpers.lists.get_prepped_of_type(getRow, start, send, 'team', header, req);
      },
      get_team_roles: function(header, req) {
        var rowTransform;
        rowTransform = function(row) {
          return {
            team: row.doc,
            role: row.key[1]
          };
        };
        return helpers.sendNakedList(getRow, start, send, rowTransform);
      }
    },
    shows: {},
    rewrites: [
      {
        from: "/teams",
        to: "/_list/get_teams/_all_docs",
        method: 'GET',
        query: {
          include_docs: 'true'
        }
      }
    ]
  };

  module.exports = dd;

}).call(this);
